

from __gin__ import dynamic_registration

import __main__ as infer_script
from t5.data import mixtures
from t5x import models
from t5x import partitioning
from t5x import utils
import t5x.combined_tasks_v2 as ct_
import seqio
from t5x import trainer

include "t5x/examples/t5/t5_1_1/xxl.gin"
include "t5x/configs/runs/infer.gin"

BATCH_SIZE = 64


MIXTURE_OR_TASK_NAME = %gin.REQUIRED

MODE = 'predict'

MIXTURE_OR_TASK_NAME_EVAL = %MIXTURE_OR_TASK_NAME # eval dataset is usually the same as base, but we can specify a different one
#BASE_LEARNING_RATE = 0.00001 # could be overridden
TASK_FEATURE_LENGTHS = {"inputs": 128, "targets": 128}
#TRAIN_STEPS = 1_100_000  # standard is 100000 extra steps, but could be overridden. 1_150_000 would be 1000000 pre-trained steps + 150000 fine-tuning steps.
DROPOUT_RATE = 0.0
#INITIAL_CHECKPOINT_PATH = "gs://t5-data/pretrained_models/t5x/t5_1_1_xxl/checkpoint_1000000" # could be overridden 
# `LOSS_NORMALIZING_FACTOR`: When fine-tuning a model that was pre-trained
# using Mesh Tensorflow (e.g. the public T5 / mT5 / ByT5 models), this should be
# set to `pretraining batch_size` * `target_token_length`. For T5 and T5.1.1:
# `2048 * 114`. For mT5: `1024 * 229`. For ByT5: `1024 * 189`.
#LOSS_NORMALIZING_FACTOR = 233472

partitioning.PjitPartitioner:
  num_partitions = 8
  
infer_script.infer:
  mode = %MODE
  checkpoint_ds_iter = False
  write_fn = @infer_script.write_inferences_to_file
  
infer_script.write_inferences_to_file:
  #include_all_inputs = True
  input_fields_to_include = ['inputs','targets']
  

  
utils.SaveCheckpointConfig:
  period = 10000


infer_eval/utils.DatasetConfig:
  mixture_or_task_name = %MIXTURE_OR_TASK_NAME_EVAL
  task_feature_lengths = %TASK_FEATURE_LENGTHS
  split = 'validation'
  batch_size = 64
#  shuffle = True
#  seed = 42
#  use_cached = %USE_CACHED_TASKS
  pack = False
#  module = %MIXTURE_OR_TASK_MODULE



seqio.Evaluator:
  logger_cls = [@seqio.PyLoggingLogger, @seqio.TensorBoardLogger, @seqio.JSONLogger]
  num_examples = 3000  # Use the first 3000 examples in the test set
#  use_memory_cache = True
